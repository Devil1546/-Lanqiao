package com.ljp.leecode_cn.math;

/**
 * 7. 整数反转
 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

 示例 1:

 输入: 123
 输出: 321
 示例 2:

 输入: -123
 输出: -321
 示例 3:

 输入: 120
 输出: 21
 注意:

 假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

 通过次数437,123提交次数1,262,975
 */
public class _简单_7_整数反转 {
    /**
     *
     * @param x
     * @return
     * 执行用时：
    1 ms, 在所有 Java 提交中击败了100.00%的用户
    内存消耗：
    37 MB, 在所有 Java 提交中击败了64.23%的用户
     */
    public int reverse(int x) {
        long res = 0;
        while(x != 0){
            res = res * 10 + x % 10;
            x /= 10;
        }
        if(res > (1 << 31) - 1 || res < (-1 << 31)){
            return 0;
        }
        return (int)res;
    }
}
